# coding: utf-8
import sim_data_transf_pb2 as pb
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

sims = range(3)
conditions = ["500-sqrt2", "1000-1", "100-sqrt10", "200-sqrt10", "100-5"]

files = {}
dumps = {}
data = {}
freqs = {}
figs = {}

for cond in conditions:
    figs[cond] = plt.figure()
    axs = [plt.subplot2grid((1, len(sims)), (0, x)) for x in range(3)]

    for sim in sims:
        f = open("../bin/{}_{}.dat".format(cond, sim), "rb")
        dump = pb.Data_dump()
        dump.ParseFromString(f)
        data = [x.saddle_id for x in dump.saddle_t_and_id]
        freqs[(cond, sim)] = np.array(zip(*sorted(data))[1]) / 10000.0
        axs[sim].bar(range(freqs[(cond, sim)].size, freqs[(cond, sim)]))
        axs[sim].axis([0, 30, 0, 0.06])


# fig1 = plt.figure()
# plt.bar(range(f_data.size), f_data)
# plt.axis([0, 30, 0, 0.06])
# fig2 = plt.figure()
# plt.bar(range(f2_data.size), f2_data)
# plt.axis([0, 30, 0, 0.06])
# fig3 = plt.figure()
# plt.bar(range(g_data.size), g_data)
# plt.axis([0, 30, 0, 0.06])
# fig4 = plt.figure()
# plt.bar(range(g2_data.size), g2_data)
# plt.axis([0, 30, 0, 0.06])
# fig5 = plt.figure()
# plt.bar(range(new_data.size), new_data)
# plt.axis([0, 30, 0, 0.06])
# fig6 = plt.figure()
# plt.bar(range(diff_data.size), diff_data)
# plt.axis([0, 30, 0, 0.06])
